//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TECAirlinesDataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TECAirlinesDBEntities : DbContext
    {
        public TECAirlinesDBEntities()
            : base("name=TECAirlinesDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AIRPLANE> AIRPLANEs { get; set; }
        public virtual DbSet<AIRPORT> AIRPORTs { get; set; }
        public virtual DbSet<CLIENT> CLIENTs { get; set; }
        public virtual DbSet<FLIGHT> FLIGHTs { get; set; }
        public virtual DbSet<PILOT> PILOTs { get; set; }
        public virtual DbSet<RESERVATION> RESERVATIONs { get; set; }
        public virtual DbSet<UNIVERSITY> UNIVERSITies { get; set; }
        public virtual DbSet<FROUTE> FROUTEs { get; set; }
        public virtual DbSet<ALL_FLIGHT> ALL_FLIGHT { get; set; }
        public virtual DbSet<CLIENT_INFO> CLIENT_INFO { get; set; }
        public virtual DbSet<PLANE_INFO> PLANE_INFO { get; set; }
    
        public virtual int ADD_MILES(Nullable<int> iD, Nullable<int> mILES)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var mILESParameter = mILES.HasValue ?
                new ObjectParameter("MILES", mILES) :
                new ObjectParameter("MILES", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_MILES", iDParameter, mILESParameter);
        }
    
        public virtual int CHECKIN(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHECKIN", iDParameter);
        }
    
        public virtual int DELETE_ROUTE(string oRI, string dES, Nullable<int> fID)
        {
            var oRIParameter = oRI != null ?
                new ObjectParameter("ORI", oRI) :
                new ObjectParameter("ORI", typeof(string));
    
            var dESParameter = dES != null ?
                new ObjectParameter("DES", dES) :
                new ObjectParameter("DES", typeof(string));
    
            var fIDParameter = fID.HasValue ?
                new ObjectParameter("FID", fID) :
                new ObjectParameter("FID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_ROUTE", oRIParameter, dESParameter, fIDParameter);
        }
    
        public virtual ObjectResult<EMAIL_CONFIRMATION_Result> EMAIL_CONFIRMATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EMAIL_CONFIRMATION_Result>("EMAIL_CONFIRMATION");
        }
    
        public virtual ObjectResult<GET_AIRPLANE_BYD_Result> GET_AIRPLANE_BYD(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AIRPLANE_BYD_Result>("GET_AIRPLANE_BYD", iDParameter);
        }
    
        public virtual ObjectResult<GET_AIRPORT_BYID_Result> GET_AIRPORT_BYID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_AIRPORT_BYID_Result>("GET_AIRPORT_BYID", iDParameter);
        }
    
        public virtual ObjectResult<GET_ALL_AIRPLANE_Result> GET_ALL_AIRPLANE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_ALL_AIRPLANE_Result>("GET_ALL_AIRPLANE");
        }
    
        public virtual ObjectResult<GET_ALL_AIRPORTS_Result> GET_ALL_AIRPORTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_ALL_AIRPORTS_Result>("GET_ALL_AIRPORTS");
        }
    
        public virtual ObjectResult<GET_ALL_CLIENT_Result> GET_ALL_CLIENT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_ALL_CLIENT_Result>("GET_ALL_CLIENT");
        }
    
        public virtual ObjectResult<GET_ALL_PILOT_Result> GET_ALL_PILOT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_ALL_PILOT_Result>("GET_ALL_PILOT");
        }
    
        public virtual ObjectResult<GET_ALL_UNIVERSITY_Result> GET_ALL_UNIVERSITY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_ALL_UNIVERSITY_Result>("GET_ALL_UNIVERSITY");
        }
    
        public virtual ObjectResult<GET_CLIENT_BYID_Result> GET_CLIENT_BYID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CLIENT_BYID_Result>("GET_CLIENT_BYID", iDParameter);
        }
    
        public virtual ObjectResult<string> GET_CLIENT_CC(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_CLIENT_CC", iDParameter);
        }
    
        public virtual ObjectResult<GET_CLIENT_INFO_BYID_Result> GET_CLIENT_INFO_BYID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CLIENT_INFO_BYID_Result>("GET_CLIENT_INFO_BYID", iDParameter);
        }
    
        public virtual ObjectResult<GET_CLIENTE_INFO_Result> GET_CLIENTE_INFO(string eMAIL)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CLIENTE_INFO_Result>("GET_CLIENTE_INFO", eMAILParameter);
        }
    
        public virtual ObjectResult<GET_FLIGHT_BYOD_Result> GET_FLIGHT_BYOD(string o, string d)
        {
            var oParameter = o != null ?
                new ObjectParameter("O", o) :
                new ObjectParameter("O", typeof(string));
    
            var dParameter = d != null ?
                new ObjectParameter("D", d) :
                new ObjectParameter("D", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_FLIGHT_BYOD_Result>("GET_FLIGHT_BYOD", oParameter, dParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_FLIGHT_ID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_FLIGHT_ID");
        }
    
        public virtual ObjectResult<GET_NOT_STUDENT_Result> GET_NOT_STUDENT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_NOT_STUDENT_Result>("GET_NOT_STUDENT");
        }
    
        public virtual ObjectResult<GET_PILOT_BYID_Result> GET_PILOT_BYID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PILOT_BYID_Result>("GET_PILOT_BYID", iDParameter);
        }
    
        public virtual ObjectResult<GET_PLANE_INFO_BYID_Result> GET_PLANE_INFO_BYID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PLANE_INFO_BYID_Result>("GET_PLANE_INFO_BYID", iDParameter);
        }
    
        public virtual ObjectResult<GET_PROMTIONS_Result> GET_PROMTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PROMTIONS_Result>("GET_PROMTIONS");
        }
    
        public virtual ObjectResult<GET_REGULAR_FLIGHTS_Result> GET_REGULAR_FLIGHTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_REGULAR_FLIGHTS_Result>("GET_REGULAR_FLIGHTS");
        }
    
        public virtual ObjectResult<GET_STUDENT_Result> GET_STUDENT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_STUDENT_Result>("GET_STUDENT");
        }
    
        public virtual ObjectResult<GET_UNIVERSITY_BYID_Result> GET_UNIVERSITY_BYID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_UNIVERSITY_BYID_Result>("GET_UNIVERSITY_BYID", iDParameter);
        }
    
        public virtual int INSERT_AIRPLANE(Nullable<int> iD, Nullable<int> pID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pIDParameter = pID.HasValue ?
                new ObjectParameter("PID", pID) :
                new ObjectParameter("PID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_AIRPLANE", iDParameter, pIDParameter);
        }
    
        public virtual int INSERT_AIRPORT(string nAME, string iCODE, string sCODE, string cCODE, string cOUNTRY)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var iCODEParameter = iCODE != null ?
                new ObjectParameter("ICODE", iCODE) :
                new ObjectParameter("ICODE", typeof(string));
    
            var sCODEParameter = sCODE != null ?
                new ObjectParameter("SCODE", sCODE) :
                new ObjectParameter("SCODE", typeof(string));
    
            var cCODEParameter = cCODE != null ?
                new ObjectParameter("CCODE", cCODE) :
                new ObjectParameter("CCODE", typeof(string));
    
            var cOUNTRYParameter = cOUNTRY != null ?
                new ObjectParameter("COUNTRY", cOUNTRY) :
                new ObjectParameter("COUNTRY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_AIRPORT", nAMEParameter, iCODEParameter, sCODEParameter, cCODEParameter, cOUNTRYParameter);
        }
    
        public virtual int INSERT_CLIENT(string iD, string fN, string lN, string uID, string pN, string cN, Nullable<int> m, string eM, string pW, Nullable<int> uC)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var fNParameter = fN != null ?
                new ObjectParameter("FN", fN) :
                new ObjectParameter("FN", typeof(string));
    
            var lNParameter = lN != null ?
                new ObjectParameter("LN", lN) :
                new ObjectParameter("LN", typeof(string));
    
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var pNParameter = pN != null ?
                new ObjectParameter("PN", pN) :
                new ObjectParameter("PN", typeof(string));
    
            var cNParameter = cN != null ?
                new ObjectParameter("CN", cN) :
                new ObjectParameter("CN", typeof(string));
    
            var mParameter = m.HasValue ?
                new ObjectParameter("M", m) :
                new ObjectParameter("M", typeof(int));
    
            var eMParameter = eM != null ?
                new ObjectParameter("EM", eM) :
                new ObjectParameter("EM", typeof(string));
    
            var pWParameter = pW != null ?
                new ObjectParameter("PW", pW) :
                new ObjectParameter("PW", typeof(string));
    
            var uCParameter = uC.HasValue ?
                new ObjectParameter("UC", uC) :
                new ObjectParameter("UC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_CLIENT", iDParameter, fNParameter, lNParameter, uIDParameter, pNParameter, cNParameter, mParameter, eMParameter, pWParameter, uCParameter);
        }
    
        public virtual int INSERT_FLIGHT(Nullable<int> iD, Nullable<int> aID, string o, string d, string fS)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var aIDParameter = aID.HasValue ?
                new ObjectParameter("AID", aID) :
                new ObjectParameter("AID", typeof(int));
    
            var oParameter = o != null ?
                new ObjectParameter("O", o) :
                new ObjectParameter("O", typeof(string));
    
            var dParameter = d != null ?
                new ObjectParameter("D", d) :
                new ObjectParameter("D", typeof(string));
    
            var fSParameter = fS != null ?
                new ObjectParameter("FS", fS) :
                new ObjectParameter("FS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_FLIGHT", iDParameter, aIDParameter, oParameter, dParameter, fSParameter);
        }
    
        public virtual int INSERT_PILOT(Nullable<int> iD, string fN, string lN)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fNParameter = fN != null ?
                new ObjectParameter("FN", fN) :
                new ObjectParameter("FN", typeof(string));
    
            var lNParameter = lN != null ?
                new ObjectParameter("LN", lN) :
                new ObjectParameter("LN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PILOT", iDParameter, fNParameter, lNParameter);
        }
    
        public virtual int INSERT_RESERVATION(Nullable<int> tICKET_COUNT, Nullable<int> lUGGAGE_COUNT, string sEATS, string cHECKIN, string tTYPE, Nullable<int> pRICE, string cLIENT_ID, Nullable<int> fLIGHT_ID)
        {
            var tICKET_COUNTParameter = tICKET_COUNT.HasValue ?
                new ObjectParameter("TICKET_COUNT", tICKET_COUNT) :
                new ObjectParameter("TICKET_COUNT", typeof(int));
    
            var lUGGAGE_COUNTParameter = lUGGAGE_COUNT.HasValue ?
                new ObjectParameter("LUGGAGE_COUNT", lUGGAGE_COUNT) :
                new ObjectParameter("LUGGAGE_COUNT", typeof(int));
    
            var sEATSParameter = sEATS != null ?
                new ObjectParameter("SEATS", sEATS) :
                new ObjectParameter("SEATS", typeof(string));
    
            var cHECKINParameter = cHECKIN != null ?
                new ObjectParameter("CHECKIN", cHECKIN) :
                new ObjectParameter("CHECKIN", typeof(string));
    
            var tTYPEParameter = tTYPE != null ?
                new ObjectParameter("TTYPE", tTYPE) :
                new ObjectParameter("TTYPE", typeof(string));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(int));
    
            var cLIENT_IDParameter = cLIENT_ID != null ?
                new ObjectParameter("CLIENT_ID", cLIENT_ID) :
                new ObjectParameter("CLIENT_ID", typeof(string));
    
            var fLIGHT_IDParameter = fLIGHT_ID.HasValue ?
                new ObjectParameter("FLIGHT_ID", fLIGHT_ID) :
                new ObjectParameter("FLIGHT_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_RESERVATION", tICKET_COUNTParameter, lUGGAGE_COUNTParameter, sEATSParameter, cHECKINParameter, tTYPEParameter, pRICEParameter, cLIENT_IDParameter, fLIGHT_IDParameter);
        }
    
        public virtual int INSERT_ROUTE(Nullable<int> iD, string oRI, string dES, Nullable<int> fM, Nullable<int> c, Nullable<int> eCP, Nullable<int> eJP, Nullable<System.DateTime> dH, string iP, Nullable<int> lC)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var oRIParameter = oRI != null ?
                new ObjectParameter("ORI", oRI) :
                new ObjectParameter("ORI", typeof(string));
    
            var dESParameter = dES != null ?
                new ObjectParameter("DES", dES) :
                new ObjectParameter("DES", typeof(string));
    
            var fMParameter = fM.HasValue ?
                new ObjectParameter("FM", fM) :
                new ObjectParameter("FM", typeof(int));
    
            var cParameter = c.HasValue ?
                new ObjectParameter("C", c) :
                new ObjectParameter("C", typeof(int));
    
            var eCPParameter = eCP.HasValue ?
                new ObjectParameter("ECP", eCP) :
                new ObjectParameter("ECP", typeof(int));
    
            var eJPParameter = eJP.HasValue ?
                new ObjectParameter("EJP", eJP) :
                new ObjectParameter("EJP", typeof(int));
    
            var dHParameter = dH.HasValue ?
                new ObjectParameter("DH", dH) :
                new ObjectParameter("DH", typeof(System.DateTime));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var lCParameter = lC.HasValue ?
                new ObjectParameter("LC", lC) :
                new ObjectParameter("LC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_ROUTE", iDParameter, oRIParameter, dESParameter, fMParameter, cParameter, eCPParameter, eJPParameter, dHParameter, iPParameter, lCParameter);
        }
    
        public virtual int INSERT_UNIVERSITY(string nAME)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_UNIVERSITY", nAMEParameter);
        }
    
        public virtual ObjectResult<SELECT_FLIGHT_ID_Result> SELECT_FLIGHT_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_FLIGHT_ID_Result>("SELECT_FLIGHT_ID", iDParameter);
        }
    
        public virtual ObjectResult<SELECT_RESERVATION_Result> SELECT_RESERVATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_RESERVATION_Result>("SELECT_RESERVATION");
        }
    
        public virtual ObjectResult<SELECT_RESERVATION_ID_Result> SELECT_RESERVATION_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_RESERVATION_ID_Result>("SELECT_RESERVATION_ID", iDParameter);
        }
    
        public virtual int SET_SEATS(Nullable<int> iD, string sEATS)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var sEATSParameter = sEATS != null ?
                new ObjectParameter("SEATS", sEATS) :
                new ObjectParameter("SEATS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SET_SEATS", iDParameter, sEATSParameter);
        }
    
        public virtual int CHANGE_STATUS(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CHANGE_STATUS", iDParameter);
        }
    
        public virtual ObjectResult<SELECT_RESERVATION_BYCID_Result> SELECT_RESERVATION_BYCID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SELECT_RESERVATION_BYCID_Result>("SELECT_RESERVATION_BYCID", iDParameter);
        }
    
        public virtual ObjectResult<string> GET_CLIENT_ID(string eMAIL)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_CLIENT_ID", eMAILParameter);
        }
    }
}
